#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format postdata '$remote_addr - $remote_user [$time_local] $request_time [$upstream_response_time] '
                    '"$request $args $request_body" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"'
                    '"$http_content_type"' - '"$http_authorization"';

    include /usr/local/etc/nginx/conf.d/*.conf;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

	proxy_buffer_size   512k;
	proxy_buffers   4 1024k;
	proxy_busy_buffers_size   1024k;

	proxy_connect_timeout  600s;
	proxy_send_timeout  600s;
	proxy_read_timeout  600s;
	fastcgi_send_timeout 600s;
	fastcgi_read_timeout 600s;
   
	#keepalive_timeout  0;
    	keepalive_timeout  600;

    #gzip  on;

    server {
            listen 80;
            server_name admin-panel.local;

            root /server/web;
            index app.php app_dev.php index.php index.html index.htm;

            access_log /var/log/nginx/admin-panel.local.access;
            error_log /var/log/nginx/admin-panel.local.error;

    	location / {
            # try to serve file directly, fallback to app.php
            try_files $uri /app.php$is_args$args;
        }
        # DEV
        # This rule should only be placed on your development environment
        # In production, don't include this and don't deploy app_dev.php or config.php
        location ~ ^/(app_dev|config)\.php(/|$) {
            fastcgi_pass admin-panel:9060;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            # When you are using symlinks to link the document root to the
            # current version of your application, you should pass the real
            # application path instead of the path to the symlink to PHP
            # FPM.
            # Otherwise, PHP's OPcache may not properly detect changes to
            # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
            # for more information).
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $document_root;
        }
        # PROD
        location ~ ^/app\.php(/|$) {
            fastcgi_pass admin-panel:9060;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            # When you are using symlinks to link the document root to the
            # current version of your application, you should pass the real
            # application path instead of the path to the symlink to PHP
            # FPM.
            # Otherwise, PHP's OPcache may not properly detect changes to
            # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
            # for more information).
           	#fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            #fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $document_root;
    	# Prevents URIs that include the front controller. This will 404:
            # http://domain.tld/app.php/some-path
            # Remove the internal directive to allow URIs like this
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
          return 404;
        }
    }
}
